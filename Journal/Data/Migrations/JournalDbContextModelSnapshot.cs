// <auto-generated />
using System;
using Journal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Journal.Data.Migrations
{
    [DbContext(typeof(JournalDbContext))]
    partial class JournalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Journal.Domain.Notes.Note", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("NoteBody")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NoteTag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TargetPersonId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TargetPersonId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Journal.Domain.OrdinatoryRecords.OrdinatoryRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicineName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TargetPersonId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TargetPersonId");

                    b.ToTable("OrdinatoryRecords");
                });

            modelBuilder.Entity("Journal.Domain.Persons.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Journal.Domain.Notes.Note", b =>
                {
                    b.HasOne("Journal.Domain.Persons.Person", "TargetPerson")
                        .WithMany("Notes")
                        .HasForeignKey("TargetPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TargetPerson");
                });

            modelBuilder.Entity("Journal.Domain.OrdinatoryRecords.OrdinatoryRecord", b =>
                {
                    b.HasOne("Journal.Domain.Persons.Person", "TargetPerson")
                        .WithMany("OrdinatoryRecords")
                        .HasForeignKey("TargetPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TargetPerson");
                });

            modelBuilder.Entity("Journal.Domain.Persons.Person", b =>
                {
                    b.Navigation("Notes");

                    b.Navigation("OrdinatoryRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
